services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: ra-backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - YOLO_MODEL_REF=yolov8n.pt
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app
      - ./ml:/app/ml
      - data_shared:/data
    # za dev: hot reload
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
    container_name: ra-frontend
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      # sprijeƒçi da host pregazi node_modules unutar kontejnera
      - node_modules_cache:/app/node_modules
    command: npm run dev
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 15s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  worker:
    build: ./worker
    container_name: ra-worker
    environment:
      - BACKEND_URL=http://backend:8000
      - UPLOADS_DIR=/data/uploads
      - RESULTS_DIR=/data/results
      - PROCESSED_DIR=/data/processed
      - FAILED_DIR=/data/failed
      - YOLO_MODEL_REF=yolov8n.pt
    volumes:
      - ./worker:/worker
      - data_shared:/data
    depends_on:
      backend:
        condition: service_started
    restart: unless-stopped

volumes:
  node_modules_cache:
  data_shared:
