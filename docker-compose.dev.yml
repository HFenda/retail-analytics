services:
  backend:
    build: ./backend
    container_name: ra-backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - YOLO_MODEL_REF=yolov8n.pt
      - PYTHONPATH=/app
      - YOLO_CONFIG_DIR=/tmp/Ultralytics
      - STORAGE_DIR=/storage
      - BACKEND_EXTERNAL_URL=http://localhost:8000
    volumes:
      - ./backend:/app
      - ./ml:/app/ml
      - ./storage:/storage
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 20s
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      args:
        - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
    container_name: ra-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
    volumes:
      - ./frontend:/app
    command: [ "sh", "-c", "npm ci && npm run dev" ]
    depends_on:
      backend:
        condition: service_healthy

  worker:
    build: ./worker
    container_name: ra-worker
    environment:
      # Worker više NE šalje nazad na /analyze, nego obrađuje direktno iz storage-a
      - STORAGE_DIR=/storage
      - UPLOADS_DIR=/storage/uploads
      - RESULTS_DIR=/storage/results
      - PROCESSED_DIR=/storage/processed
      - FAILED_DIR=/storage/failed
      - YOLO_MODEL_REF=yolov8n.pt
      - PYTHONPATH=/worker:/app
    volumes:
      - ./worker:/worker
      - ./ml:/app/ml
      - ./storage:/storage
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
